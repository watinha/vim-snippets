# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if (${1:true}) {${2}};
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}

snippet angular.module
	angular.module("${1}", ["${2}"])

snippet angular.controller
	.controller("${1}", function (${2}) {
		${3}
	});


snippet express
	let http = require('http'),
		path = require('path'),
		express = require('express'),
		app = express();

	app.set('view engine', 'hbs');
	app.set('views', path.join(__dirname, 'view'));
	app.use(express.static(path.join(__dirname, 'public')));
	app.use(express.urlencoded({extended: false}));

	app.listen(3000);


snippet createSlice
	import { createSlice } from '@reduxjs/toolkit';

	export const ${1} = createSlice({
		name: '${2}',
		initialState: {},
		reducers: {},
	});

snippet react-test
	import React from 'react';
	import { render } from 'react-dom';
	import { act, Simulate } from 'react-dom/test-utils';
	import { Provider } from 'react-redux';

	import store from '../../app/store';

	let container;
	beforeEach(() => {
		container = document.createElement('div');
	});

	it('first test', async () => {
	});

snippet webpack
	const path = require('path');

	module.exports = {
		entry: './src/js/index.js',
		output: {
			filename: 'main.js',
			path: path.resolve(__dirname, 'dist'),
		},
		module: {
			rules: [
				{
					test: /\.css$/i,
					use: ['style-loader', 'css-loader'],
				},
			 {
				 test: /\.(png|svg|jpg|jpeg|gif)$/i,
				 type: 'asset/resource',
			 },
			],
		},
	};
